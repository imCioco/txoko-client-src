; Listing generated by Microsoft (R) Optimizing Compiler Version 19.44.35217.0 

	TITLE	d:\_m2work\txoko-m2-work\txoko-client-src\vs_files\userinterface\distribute\processscanner.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BH@HGFKAINA@ProcessScanner_ReqExit@	; `string'
PUBLIC	??_C@_0BH@DLJCKJNL@ProcessScanner_ResExit@	; `string'
PUBLIC	??_C@_0BD@HGPDOMOG@CreateThread?5Error@		; `string'
PUBLIC	??_C@_0BI@DABBIDIM@SetThreadPriority?5Error@	; `string'
EXTRN	__imp__SetThreadPriority@8:PROC
EXTRN	?LogBox@@YAXPBD0PAUHWND__@@@Z:PROC		; LogBox
EXTRN	__beginthread:PROC
EXTRN	__imp__CreateEventA@16:PROC
EXTRN	__imp__InitializeCriticalSection@4:PROC
EXTRN	_rand:PROC
EXTRN	__imp__LeaveCriticalSection@4:PROC
EXTRN	__imp__EnterCriticalSection@4:PROC
EXTRN	__imp__DeleteCriticalSection@4:PROC
EXTRN	__imp__WaitForSingleObject@8:PROC
EXTRN	__imp__SetEvent@4:PROC
EXTRN	__imp__Process32Next@8:PROC
EXTRN	__imp__Sleep@4:PROC
EXTRN	__imp__OpenProcess@12:PROC
EXTRN	__imp__Process32First@8:PROC
EXTRN	__imp__GetSystemInfo@4:PROC
;	COMDAT ??_C@_0BI@DABBIDIM@SetThreadPriority?5Error@
CONST	SEGMENT
??_C@_0BI@DABBIDIM@SetThreadPriority?5Error@ DB 'SetThreadPriority Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HGPDOMOG@CreateThread?5Error@
CONST	SEGMENT
??_C@_0BD@HGPDOMOG@CreateThread?5Error@ DB 'CreateThread Error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DLJCKJNL@ProcessScanner_ResExit@
CONST	SEGMENT
??_C@_0BH@DLJCKJNL@ProcessScanner_ResExit@ DB 'ProcessScanner_ResExit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HGFKAINA@ProcessScanner_ReqExit@
CONST	SEGMENT
??_C@_0BH@HGFKAINA@ProcessScanner_ReqExit@ DB 'ProcessScanner_ReqExit', 00H ; `string'
PUBLIC	??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
PUBLIC	??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ; std::_Pocma<std::allocator<char> >
PUBLIC	??$?0KK$0A@@?$pair@$$CBKK@std@@QAE@$$QAU?$pair@KK@1@@Z ; std::pair<unsigned long const ,unsigned long>::pair<unsigned long const ,unsigned long><unsigned long,unsigned long,0>
PUBLIC	??$construct_at@U?$pair@$$CBKK@std@@U?$pair@KK@2@@std@@YAPAU?$pair@$$CBKK@0@QAU10@$$QAU?$pair@KK@0@@Z ; std::construct_at<std::pair<unsigned long const ,unsigned long>,std::pair<unsigned long,unsigned long> >
PUBLIC	??$_Get_size_of_n@$0BM@@std@@YAII@Z		; std::_Get_size_of_n<28>
PUBLIC	??$construct@U?$pair@$$CBKK@std@@U?$pair@KK@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@QAU?$pair@$$CBKK@1@$$QAU?$pair@KK@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::construct<std::pair<unsigned long const ,unsigned long>,std::pair<unsigned long,unsigned long> >
PUBLIC	??_G?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAXI@Z ; std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
PUBLIC	?_Extract@?$_In_place_key_extract_map_impl@KU?$pair@KK@std@@@std@@SAABKABU?$pair@KK@2@@Z ; std::_In_place_key_extract_map_impl<unsigned long,std::pair<unsigned long,unsigned long> >::_Extract
PUBLIC	??$destroy_at@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ; std::destroy_at<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > ><std::pair<unsigned long,unsigned long> >
PUBLIC	?deallocate@?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first
PUBLIC	??$forward@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAU10@@Z ; std::forward<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$destroy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Unfancy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAU10@@Z ; std::_Unfancy<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
PUBLIC	??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Emplace<std::pair<unsigned long,unsigned long> >
PUBLIC	?_Tidy@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEXXZ ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Tidy
PUBLIC	?_Getal@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
PUBLIC	??$_Destroy_range@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@QAU10@AAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ; std::_Destroy_range<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::emplace<std::pair<unsigned long,unsigned long> >
PUBLIC	??$forward@U?$pair@KK@std@@@std@@YA$$QAU?$pair@KK@0@AAU10@@Z ; std::forward<std::pair<unsigned long,unsigned long> >
PUBLIC	??$?0AAKAAK$0A@@?$pair@KK@std@@QAE@AAK0@Z	; std::pair<unsigned long,unsigned long>::pair<unsigned long,unsigned long><unsigned long &,unsigned long &,0>
PUBLIC	??1?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
PUBLIC	??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::insert<std::pair<unsigned long,unsigned long>,0>
PUBLIC	??$make_pair@AAKAAK@std@@YA?AU?$pair@KK@0@AAK0@Z ; std::make_pair<unsigned long &,unsigned long &>
PUBLIC	??1?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ; std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
	ALIGN	4

?gs_kVct_crcPair@@3V?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@A DB 0cH DUP (?) ; gs_kVct_crcPair
_BSS	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z$2
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
__unwindtable$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z$1
?gs_kVct_crcPair$initializer$@@3P6AXXZA DD FLAT:??__Egs_kVct_crcPair@@YAXXZ ; gs_kVct_crcPair$initializer$
; Function compile flags: /Ogtp
; File D:\_m2work\txoko-m2-work\txoko-client-src\source\UserInterface\ProcessScanner.cpp
;	COMDAT ??__Egs_kVct_crcPair@@YAXXZ
text$di	SEGMENT
??__Egs_kVct_crcPair@@YAXXZ PROC			; `dynamic initializer for 'gs_kVct_crcPair'', COMDAT

; 6    : static std::vector<CRCPair> gs_kVct_crcPair;

  00000	68 00 00 00 00	 push	 OFFSET ??__Fgs_kVct_crcPair@@YAXXZ ; `dynamic atexit destructor for 'gs_kVct_crcPair''
  00005	e8 00 00 00 00	 call	 _atexit
  0000a	59		 pop	 ecx
  0000b	c3		 ret	 0
??__Egs_kVct_crcPair@@YAXXZ ENDP			; `dynamic initializer for 'gs_kVct_crcPair''
text$di	ENDS
; Function compile flags: /Ogtp
;	COMDAT ??__Fgs_kVct_crcPair@@YAXXZ
text$yd	SEGMENT
??__Fgs_kVct_crcPair@@YAXXZ PROC			; `dynamic atexit destructor for 'gs_kVct_crcPair'', COMDAT
  00000	b9 00 00 00 00	 mov	 ecx, OFFSET ?gs_kVct_crcPair@@3V?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@A
  00005	e9 00 00 00 00	 jmp	 ??1?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
??__Fgs_kVct_crcPair@@YAXXZ ENDP			; `dynamic atexit destructor for 'gs_kVct_crcPair''
text$yd	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
;	COMDAT ??1?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ PROC ; std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4

; 1383 :         _Tidy_deallocate();

  00003	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??1?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAE@XZ ENDP ; std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::~pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
;	COMDAT ??$make_pair@AAKAAK@std@@YA?AU?$pair@KK@0@AAK0@Z
_TEXT	SEGMENT
__Val2$ = 8						; size = 4
??$make_pair@AAKAAK@std@@YA?AU?$pair@KK@0@AAK0@Z PROC	; std::make_pair<unsigned long &,unsigned long &>, COMDAT
; ___$ReturnUdt$ = ecx
; __Val1$ = edx

; 578  :              && is_nothrow_constructible_v<_Unrefwrap_t<_Ty2>, _Ty2>) /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00003	8b 02		 mov	 eax, DWORD PTR [edx]
  00005	89 01		 mov	 DWORD PTR [ecx], eax
  00007	8b 45 08	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 579  :     // return pair composed from arguments
; 580  :     using _Mypair = pair<_Unrefwrap_t<_Ty1>, _Unrefwrap_t<_Ty2>>;
; 581  :     return _Mypair(_STD forward<_Ty1>(_Val1), _STD forward<_Ty2>(_Val2));

  0000f	8b c1		 mov	 eax, ecx

; 582  : }

  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
??$make_pair@AAKAAK@std@@YA?AU?$pair@KK@0@AAK0@Z ENDP	; std::make_pair<unsigned long &,unsigned long &>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\map
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\map
;	COMDAT ??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
_TEXT	SEGMENT
__Loc$3 = -36						; size = 12
$T4 = -24						; size = 12
$T5 = -20						; size = 8
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Val$ = 12						; size = 4
??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z PROC ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::insert<std::pair<unsigned long,unsigned long>,0>, COMDAT
; _this$ = ecx

; 185  :     pair<iterator, bool> insert(_Valty&& _Val) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1017 :             _Loc                = _Find_lower_bound(_Keyval);

  0002a	8b 5d 0c	 mov	 ebx, DWORD PTR __Val$[ebp]
  0002d	8d 45 e8	 lea	 eax, DWORD PTR $T4[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
  00037	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003a	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0003e	66 0f d6 45 dc	 movq	 QWORD PTR __Loc$3[ebp], xmm0

; 1624 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00043	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00047	75 0b		 jne	 SHORT $LN6@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits

; 2380 :         return _Left < _Right;

  00049	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004b	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1624 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004e	72 04		 jb	 SHORT $LN6@insert
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00050	32 d2		 xor	 dl, dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1019 :                 return {_Loc._Bound, false};

  00052	eb 51		 jmp	 SHORT $LN98@insert
$LN6@insert:

; 1648 :         if (max_size() == _Get_scary()->_Mysize) {

  00054	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  0005b	74 64		 je	 SHORT $LN120@insert

; 1023 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0005d	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1160 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0005f	89 7d ec	 mov	 DWORD PTR $T5[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 808  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00069	6a 18		 push	 24			; 00000018H

; 1167 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0006b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T5[ebp+4], 0

; 136  :         return ::operator new(_Bytes);

  00072	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00077	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00079	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  0007c	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0007f	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00082	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00085	8b cf		 mov	 ecx, edi
  00087	50		 push	 eax
  00088	ff 75 e0	 push	 DWORD PTR __Loc$3[ebp+4]

; 831  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  0008b	89 30		 mov	 DWORD PTR [eax], esi

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0008d	ff 75 dc	 push	 DWORD PTR __Loc$3[ebp]

; 832  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00090	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 833  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00093	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 834  :         this->_Ptr->_Color = _Red;

  00096	66 c7 40 0c 00
	00		 mov	 WORD PTR [eax+12], 0

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0009c	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000a1	8b c8		 mov	 ecx, eax
  000a3	b2 01		 mov	 dl, 1
$LN98@insert:
  000a5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a8	89 08		 mov	 DWORD PTR [eax], ecx
  000aa	88 50 04	 mov	 BYTE PTR [eax+4], dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\map

; 187  :     }

  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8
$LN120@insert:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1649 :             _Throw_tree_length_error();

  000c1	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN118@insert:
  000c6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T5[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$insert@U?$pair@KK@std@@$0A@@?$map@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z ENDP ; std::map<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> > >::insert<std::pair<unsigned long,unsigned long>,0>
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
;	COMDAT ??1?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ PROC ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; _this$ = ecx

; 829  :     _CONSTEXPR20 ~vector() noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 2090 :         if (_Myfirst) { // destroy and deallocate old array

  00004	8b 37		 mov	 esi, DWORD PTR [edi]
  00006	85 f6		 test	 esi, esi
  00008	74 43		 je	 SHORT $LN5@vector
  0000a	53		 push	 ebx

; 2091 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);

  0000b	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1102 :         for (; _First != _Last; ++_First) {

  0000e	3b f3		 cmp	 esi, ebx
  00010	74 0f		 je	 SHORT $LN10@vector
$LL11@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring

; 1383 :         _Tidy_deallocate();

  00012	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00015	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1102 :         for (; _First != _Last; ++_First) {

  0001a	83 c6 1c	 add	 esi, 28			; 0000001cH
  0001d	3b f3		 cmp	 esi, ebx
  0001f	75 f1		 jne	 SHORT $LL11@vector
$LN10@vector:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector

; 2093 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00021	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00023	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00026	2b c1		 sub	 eax, ecx
  00028	c1 f8 02	 sar	 eax, 2
  0002b	69 c0 b7 6d db
	b6		 imul	 eax, eax, -1227133513
  00031	50		 push	 eax
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate

; 2094 : 
; 2095 :             _Myfirst = nullptr;

  00038	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 2096 :             _Mylast  = nullptr;

  0003e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 2097 :             _Myend   = nullptr;

  00045	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0004c	5b		 pop	 ebx
$LN5@vector:
  0004d	5f		 pop	 edi

; 830  :         _Tidy();
; 831  : #if _ITERATOR_DEBUG_LEVEL != 0
; 832  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());
; 833  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));
; 834  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 835  :     }

  0004e	5e		 pop	 esi
  0004f	c3		 ret	 0
??1?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@QAE@XZ ENDP ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::~vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
;	COMDAT ??$?0AAKAAK$0A@@?$pair@KK@std@@QAE@AAK0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??$?0AAKAAK$0A@@?$pair@KK@std@@QAE@AAK0@Z PROC		; std::pair<unsigned long,unsigned long>::pair<unsigned long,unsigned long><unsigned long &,unsigned long &,0>, COMDAT
; _this$ = ecx

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 45 08	 mov	 eax, DWORD PTR __Val1$[ebp]
  00006	8b 00		 mov	 eax, DWORD PTR [eax]
  00008	89 01		 mov	 DWORD PTR [ecx], eax
  0000a	8b 45 0c	 mov	 eax, DWORD PTR __Val2$[ebp]
  0000d	8b 00		 mov	 eax, DWORD PTR [eax]
  0000f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 275  :     }

  00012	8b c1		 mov	 eax, ecx
  00014	5d		 pop	 ebp
  00015	c2 08 00	 ret	 8
??$?0AAKAAK$0A@@?$pair@KK@std@@QAE@AAK0@Z ENDP		; std::pair<unsigned long,unsigned long>::pair<unsigned long,unsigned long><unsigned long &,unsigned long &,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
;	COMDAT ??$forward@U?$pair@KK@std@@@std@@YA$$QAU?$pair@KK@0@AAU10@@Z
_TEXT	SEGMENT
??$forward@U?$pair@KK@std@@@std@@YA$$QAU?$pair@KK@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long,unsigned long> >, COMDAT
; __Arg$ = ecx

; 1502 :     return static_cast<_Ty&&>(_Arg);

  00000	8b c1		 mov	 eax, ecx

; 1503 : }

  00002	c3		 ret	 0
??$forward@U?$pair@KK@std@@@std@@YA$$QAU?$pair@KK@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long,unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
;	COMDAT ??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
_TEXT	SEGMENT
__Loc$2 = -36						; size = 12
$T3 = -24						; size = 12
$T4 = -20						; size = 8
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::emplace<std::pair<unsigned long,unsigned long> >, COMDAT
; _this$ = ecx

; 1047 :     pair<iterator, bool> emplace(_Valtys&&... _Vals) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 1017 :             _Loc                = _Find_lower_bound(_Keyval);

  0002a	8b 5d 0c	 mov	 ebx, DWORD PTR _<_Vals_0>$[ebp]
  0002d	8d 45 e8	 lea	 eax, DWORD PTR $T3[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
  00037	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003a	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0003e	66 0f d6 45 dc	 movq	 QWORD PTR __Loc$2[ebp], xmm0

; 1624 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00043	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00047	75 0b		 jne	 SHORT $LN4@emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits

; 2380 :         return _Left < _Right;

  00049	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004b	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1624 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004e	72 04		 jb	 SHORT $LN4@emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00050	32 d2		 xor	 dl, dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1019 :                 return {_Loc._Bound, false};

  00052	eb 51		 jmp	 SHORT $LN96@emplace
$LN4@emplace:

; 1648 :         if (max_size() == _Get_scary()->_Mysize) {

  00054	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  0005b	74 64		 je	 SHORT $LN117@emplace

; 1023 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  0005d	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1160 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  0005f	89 7d ec	 mov	 DWORD PTR $T4[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 808  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  00062	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00069	6a 18		 push	 24			; 00000018H

; 1167 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  0006b	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T4[ebp+4], 0

; 136  :         return ::operator new(_Bytes);

  00072	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00077	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00079	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  0007c	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  0007f	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00082	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  00085	8b cf		 mov	 ecx, edi
  00087	50		 push	 eax
  00088	ff 75 e0	 push	 DWORD PTR __Loc$2[ebp+4]

; 831  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  0008b	89 30		 mov	 DWORD PTR [eax], esi

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0008d	ff 75 dc	 push	 DWORD PTR __Loc$2[ebp]

; 832  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  00090	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 833  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00093	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 834  :         this->_Ptr->_Color = _Red;

  00096	66 c7 40 0c 00
	00		 mov	 WORD PTR [eax+12], 0

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0009c	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000a1	8b c8		 mov	 ecx, eax
  000a3	b2 01		 mov	 dl, 1
$LN96@emplace:
  000a5	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  000a8	89 08		 mov	 DWORD PTR [eax], ecx
  000aa	88 50 04	 mov	 BYTE PTR [eax+4], dl
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1050 :     }

  000ad	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000b7	59		 pop	 ecx
  000b8	5f		 pop	 edi
  000b9	5e		 pop	 esi
  000ba	5b		 pop	 ebx
  000bb	8b e5		 mov	 esp, ebp
  000bd	5d		 pop	 ebp
  000be	c2 08 00	 ret	 8
$LN117@emplace:

; 1649 :             _Throw_tree_length_error();

  000c1	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN115@emplace:
  000c6	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T4[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@V?$_Tree_iterator@V?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@@std@@_N@1@$$QAU?$pair@KK@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::emplace<std::pair<unsigned long,unsigned long> >
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@QAU10@AAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z
_TEXT	SEGMENT
__Al$dead$ = 8						; size = 4
??$_Destroy_range@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@QAU10@AAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z PROC ; std::_Destroy_range<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >, COMDAT
; __First$ = ecx
; __Last$ = edx

; 1098 : _CONSTEXPR20 void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b fa		 mov	 edi, edx
  00004	8b f1		 mov	 esi, ecx

; 1102 :         for (; _First != _Last; ++_First) {

  00006	3b f7		 cmp	 esi, edi
  00008	74 15		 je	 SHORT $LN3@Destroy_ra
  0000a	66 0f 1f 44 00
	00		 npad	 6
$LL4@Destroy_ra:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring

; 1383 :         _Tidy_deallocate();

  00010	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00013	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1102 :         for (; _First != _Last; ++_First) {

  00018	83 c6 1c	 add	 esi, 28			; 0000001cH
  0001b	3b f7		 cmp	 esi, edi
  0001d	75 f1		 jne	 SHORT $LL4@Destroy_ra
$LN3@Destroy_ra:
  0001f	5f		 pop	 edi

; 1103 :             allocator_traits<_Alloc>::destroy(_Al, _STD _Unfancy(_First));
; 1104 :         }
; 1105 :     }
; 1106 : }

  00020	5e		 pop	 esi
  00021	c3		 ret	 0
??$_Destroy_range@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@YAXPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@QAU10@AAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
;	COMDAT ?_Getal@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Getal@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal, COMDAT
; _this$ = ecx

; 2227 :         return _Mypair._Get_first();

  00000	8b c1		 mov	 eax, ecx

; 2228 :     }

  00002	c3		 ret	 0
?_Getal@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Getal
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector
;	COMDAT ?_Tidy@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEXXZ PROC ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Tidy, COMDAT
; _this$ = ecx

; 2081 :     _CONSTEXPR20 void _Tidy() noexcept { // free all storage

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 2082 :         auto& _Al         = _Getal();
; 2083 :         auto& _My_data    = _Mypair._Myval2;
; 2084 :         pointer& _Myfirst = _My_data._Myfirst;
; 2085 :         pointer& _Mylast  = _My_data._Mylast;
; 2086 :         pointer& _Myend   = _My_data._Myend;
; 2087 : 
; 2088 :         _My_data._Orphan_all();
; 2089 : 
; 2090 :         if (_Myfirst) { // destroy and deallocate old array

  00004	8b 37		 mov	 esi, DWORD PTR [edi]
  00006	85 f6		 test	 esi, esi
  00008	74 43		 je	 SHORT $LN2@Tidy

; 2091 :             _STD _Destroy_range(_Myfirst, _Mylast, _Al);

  0000a	53		 push	 ebx
  0000b	8b 5f 04	 mov	 ebx, DWORD PTR [edi+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1102 :         for (; _First != _Last; ++_First) {

  0000e	3b f3		 cmp	 esi, ebx
  00010	74 0f		 je	 SHORT $LN7@Tidy
$LL8@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring

; 1383 :         _Tidy_deallocate();

  00012	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00015	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1102 :         for (; _First != _Last; ++_First) {

  0001a	83 c6 1c	 add	 esi, 28			; 0000001cH
  0001d	3b f3		 cmp	 esi, ebx
  0001f	75 f1		 jne	 SHORT $LL8@Tidy
$LN7@Tidy:
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\vector

; 2093 :             _Al.deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00021	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00023	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00026	2b c1		 sub	 eax, ecx
  00028	c1 f8 02	 sar	 eax, 2
  0002b	69 c0 b7 6d db
	b6		 imul	 eax, eax, -1227133513
  00031	50		 push	 eax
  00032	51		 push	 ecx
  00033	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@I@Z ; std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate

; 2094 : 
; 2095 :             _Myfirst = nullptr;

  00038	c7 07 00 00 00
	00		 mov	 DWORD PTR [edi], 0

; 2096 :             _Mylast  = nullptr;

  0003e	c7 47 04 00 00
	00 00		 mov	 DWORD PTR [edi+4], 0

; 2097 :             _Myend   = nullptr;

  00045	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  0004c	5b		 pop	 ebx
$LN2@Tidy:

; 2098 :         }
; 2099 :     }

  0004d	5f		 pop	 edi
  0004e	5e		 pop	 esi
  0004f	c3		 ret	 0
?_Tidy@?$vector@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@@std@@AAEXXZ ENDP ; std::vector<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >,std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
;	COMDAT ??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z
_TEXT	SEGMENT
__Loc$ = -36						; size = 12
$T2 = -24						; size = 12
$T3 = -20						; size = 8
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
_<_Vals_0>$ = 12					; size = 4
??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z PROC ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Emplace<std::pair<unsigned long,unsigned long> >, COMDAT
; _this$ = ecx

; 1010 :     pair<_Nodeptr, bool> _Emplace(_Valtys&&... _Vals) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00014	53		 push	 ebx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	8b f9		 mov	 edi, ecx

; 1011 :         using _In_place_key_extractor = typename _Traits::template _In_place_key_extractor<_Valtys...>;
; 1012 :         const auto _Scary             = _Get_scary();
; 1013 :         _Tree_find_result<_Nodeptr> _Loc;
; 1014 :         _Nodeptr _Inserted;
; 1015 :         if constexpr (!_Multi && _In_place_key_extractor::_Extractable) {
; 1016 :             const auto& _Keyval = _In_place_key_extractor::_Extract(_Vals...);
; 1017 :             _Loc                = _Find_lower_bound(_Keyval);

  0002a	8b 5d 0c	 mov	 ebx, DWORD PTR _<_Vals_0>$[ebp]
  0002d	8d 45 e8	 lea	 eax, DWORD PTR $T2[ebp]
  00030	53		 push	 ebx
  00031	50		 push	 eax
  00032	e8 00 00 00 00	 call	 ??$_Find_lower_bound@K@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IBE?AU?$_Tree_find_result@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Find_lower_bound<unsigned long>
  00037	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0003a	f3 0f 7e 00	 movq	 xmm0, QWORD PTR [eax]
  0003e	66 0f d6 45 dc	 movq	 QWORD PTR __Loc$[ebp], xmm0

; 1624 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  00043	80 79 0d 00	 cmp	 BYTE PTR [ecx+13], 0
  00047	75 24		 jne	 SHORT $LN2@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits

; 2380 :         return _Left < _Right;

  00049	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004b	3b 41 10	 cmp	 eax, DWORD PTR [ecx+16]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1624 :         return !_Bound->_Isnil && !_DEBUG_LT_PRED(_Getcomp(), _Keyval, _Traits::_Kfn(_Bound->_Myval));

  0004e	72 1d		 jb	 SHORT $LN2@Emplace
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  00050	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00053	89 08		 mov	 DWORD PTR [eax], ecx
  00055	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1043 :     }

  00059	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00063	59		 pop	 ecx
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	5b		 pop	 ebx
  00067	8b e5		 mov	 esp, ebp
  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
$LN2@Emplace:

; 1648 :         if (max_size() == _Get_scary()->_Mysize) {

  0006d	81 7f 04 aa aa
	aa 0a		 cmp	 DWORD PTR [edi+4], 178956970 ; 0aaaaaaaH
  00074	74 63		 je	 SHORT $LN102@Emplace

; 1018 :             if (_Lower_bound_duplicate(_Loc._Bound, _Keyval)) {
; 1019 :                 return {_Loc._Bound, false};
; 1020 :             }
; 1021 : 
; 1022 :             _Check_grow_by_1();
; 1023 :             _Inserted = _Tree_temp_node<_Alnode>(_Getal(), _Scary->_Myhead, _STD forward<_Valtys>(_Vals)...)._Release();

  00076	8b 37		 mov	 esi, DWORD PTR [edi]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1160 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00078	89 7d ec	 mov	 DWORD PTR $T3[ebp], edi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 808  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0007b	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00082	6a 18		 push	 24			; 00000018H

; 1167 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00084	c7 45 f0 00 00
	00 00		 mov	 DWORD PTR $T3[ebp+4], 0

; 136  :         return ::operator new(_Bytes);

  0008b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00090	8b 0b		 mov	 ecx, DWORD PTR [ebx]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00092	83 c4 04	 add	 esp, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00095	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00098	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0009b	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  0009e	8b cf		 mov	 ecx, edi
  000a0	50		 push	 eax
  000a1	ff 75 e0	 push	 DWORD PTR __Loc$[ebp+4]

; 831  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  000a4	89 30		 mov	 DWORD PTR [eax], esi

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000a6	ff 75 dc	 push	 DWORD PTR __Loc$[ebp]

; 832  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  000a9	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 833  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  000ac	89 70 08	 mov	 DWORD PTR [eax+8], esi

; 834  :         this->_Ptr->_Color = _Red;

  000af	66 c7 40 0c 00
	00		 mov	 WORD PTR [eax+12], 0

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000b5	e8 00 00 00 00	 call	 ?_Insert_node@?$_Tree_val@U?$_Tree_simple_types@U?$pair@$$CBKK@std@@@std@@@std@@QAEPAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@2@U?$_Tree_id@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@2@QAU32@@Z ; std::_Tree_val<std::_Tree_simple_types<std::pair<unsigned long const ,unsigned long> > >::_Insert_node
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000ba	8b 4d 08	 mov	 ecx, DWORD PTR ___$ReturnUdt$[ebp]
  000bd	89 01		 mov	 DWORD PTR [ecx], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1042 :         return {_Scary->_Insert_node(_Loc._Location, _Inserted), true};

  000bf	8b c1		 mov	 eax, ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 274  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {

  000c1	c6 41 04 01	 mov	 BYTE PTR [ecx+4], 1
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 1043 :     }

  000c5	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000cf	59		 pop	 ecx
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx
  000d3	8b e5		 mov	 esp, ebp
  000d5	5d		 pop	 ebp
  000d6	c2 08 00	 ret	 8
$LN102@Emplace:

; 1649 :             _Throw_tree_length_error();

  000d9	e8 00 00 00 00	 call	 ?_Throw_tree_length_error@std@@YAXXZ ; std::_Throw_tree_length_error
$LN100@Emplace:
  000de	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z$2:
  00000	8d 4d ec	 lea	 ecx, DWORD PTR $T3[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a d4	 mov	 ecx, DWORD PTR [edx-44]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace@U?$pair@KK@std@@@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAE?AU?$pair@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@_N@1@$$QAU?$pair@KK@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Emplace<std::pair<unsigned long,unsigned long> >
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ??$_Unfancy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAU10@@Z
_TEXT	SEGMENT
??$_Unfancy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAU10@@Z PROC ; std::_Unfancy<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; __Ptr$ = ecx

; 69   :     return _Ptr;

  00000	8b c1		 mov	 eax, ecx

; 70   : }

  00002	c3		 ret	 0
??$_Unfancy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAPAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@PAU10@@Z ENDP ; std::_Unfancy<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ??$destroy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z
_TEXT	SEGMENT
??$destroy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; ___formal$dead$ = ecx
; __Ptr$ = edx

; 737  :     static _CONSTEXPR20 void destroy(_Alloc&, _Uty* const _Ptr) {

  00000	8d 4a 04	 lea	 ecx, DWORD PTR [edx+4]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring

; 1383 :         _Tidy_deallocate();

  00003	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@std@@SAXAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@1@QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >::destroy<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\type_traits
;	COMDAT ??$forward@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAU10@@Z
_TEXT	SEGMENT
??$forward@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAU10@@Z PROC ; std::forward<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; __Arg$ = ecx

; 1502 :     return static_cast<_Ty&&>(_Arg);

  00000	8b c1		 mov	 eax, ecx

; 1503 : }

  00002	c3		 ret	 0
??$forward@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YA$$QAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@AAU10@@Z ENDP ; std::forward<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ
_TEXT	SEGMENT
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1539 :         return *this;

  00000	8b c1		 mov	 eax, ecx

; 1540 :     }

  00002	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@V?$_Vector_val@U?$_Simple_types@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >,std::_Vector_val<std::_Simple_types<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@I@Z PROC ; std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate, COMDAT
; _this$dead$ = ecx

; 982  :     _CONSTEXPR20 void deallocate(_Ty* const _Ptr, const size_t _Count) noexcept /* strengthened */ {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 983  :         _STL_ASSERT(_Ptr != nullptr || _Count == 0, "null pointer cannot point to a block of non-zero size");
; 984  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 985  :         _STD _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00006	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0000d	2b c8		 sub	 ecx, eax
  0000f	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00012	c1 e1 02	 shl	 ecx, 2

; 284  :         if (_Bytes >= _Big_allocation_threshold) {

  00015	81 f9 00 10 00
	00		 cmp	 ecx, 4096		; 00001000H
  0001b	72 12		 jb	 SHORT $LN12@deallocate

; 205  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  0001d	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00020	83 c1 23	 add	 ecx, 35			; 00000023H

; 206  : 
; 207  :     // If the following asserts, it likely means that we are performing
; 208  :     // an aligned delete on memory coming from an unaligned allocation.
; 209  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 210  : 
; 211  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 212  :     // in range [_Min_back_shift, _Non_user_size]
; 213  : #ifdef _DEBUG
; 214  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);
; 215  : #else // ^^^ defined(_DEBUG) / !defined(_DEBUG) vvv
; 216  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 217  : #endif // ^^^ !defined(_DEBUG) ^^^
; 218  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00023	2b c2		 sub	 eax, edx

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00025	83 c0 fc	 add	 eax, -4			; fffffffcH
  00028	83 f8 1f	 cmp	 eax, 31			; 0000001fH
  0002b	77 10		 ja	 SHORT $LN11@deallocate

; 220  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  0002d	8b c2		 mov	 eax, edx
$LN12@deallocate:

; 289  :         ::operator delete(_Ptr, _Bytes);

  0002f	51		 push	 ecx
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00036	83 c4 08	 add	 esp, 8

; 986  :     }

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
$LN11@deallocate:

; 219  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003d	6a 00		 push	 0
  0003f	6a 00		 push	 0
  00041	6a 00		 push	 0
  00043	6a 00		 push	 0
  00045	6a 00		 push	 0
  00047	e8 00 00 00 00	 call	 __invoke_watson
$LN15@deallocate:
  0004c	cc		 int	 3
?deallocate@?$allocator@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@QAEXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@I@Z ENDP ; std::allocator<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >::deallocate
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree
;	COMDAT ??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
__Myhead$ = 12						; size = 4
_<_Vals_0>$ = 16					; size = 4
??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z PROC ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > ><std::pair<unsigned long,unsigned long> >, COMDAT
; _this$ = ecx

; 829  :         : _Tree_temp_node_alloc<_Alnode>(_Al_) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	8b f1		 mov	 esi, ecx
  00026	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 1160 :     _CONSTEXPR20 explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

  00029	8b 45 08	 mov	 eax, DWORD PTR __Al_$[ebp]
  0002c	89 06		 mov	 DWORD PTR [esi], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 808  :     explicit _Tree_temp_node_alloc(_Alnode& _Al_) : _Alloc_construct_ptr<_Alnode>(_Al_) {

  0002e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00035	6a 18		 push	 24			; 00000018H

; 1167 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00037	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0

; 136  :         return ::operator new(_Bytes);

  0003e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00043	8b 55 10	 mov	 edx, DWORD PTR _<_Vals_0>$[ebp]
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 136  :         return ::operator new(_Bytes);

  00046	83 c4 04	 add	 esp, 4

; 1168 :         _Ptr = _Al.allocate(1);

  00049	89 46 04	 mov	 DWORD PTR [esi+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  0004c	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0004e	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00051	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00054	89 48 14	 mov	 DWORD PTR [eax+20], ecx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xtree

; 831  :         _Construct_in_place(this->_Ptr->_Left, _Myhead);

  00057	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0005a	8b 4d 0c	 mov	 ecx, DWORD PTR __Myhead$[ebp]
  0005d	89 08		 mov	 DWORD PTR [eax], ecx

; 832  :         _Construct_in_place(this->_Ptr->_Parent, _Myhead);

  0005f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00062	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 833  :         _Construct_in_place(this->_Ptr->_Right, _Myhead);

  00065	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00068	89 48 08	 mov	 DWORD PTR [eax+8], ecx

; 834  :         this->_Ptr->_Color = _Red;

  0006b	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0006e	c6 40 0c 00	 mov	 BYTE PTR [eax+12], 0

; 835  :         this->_Ptr->_Isnil = false;

  00072	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00075	c6 40 0d 00	 mov	 BYTE PTR [eax+13], 0

; 836  :     }

  00079	8b c6		 mov	 eax, esi
  0007b	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00085	59		 pop	 ecx
  00086	5e		 pop	 esi
  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z$1:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >
  00008	cc		 int	 3
  00009	cc		 int	 3
  0000a	cc		 int	 3
  0000b	cc		 int	 3
  0000c	cc		 int	 3
__ehhandler$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z:
  0000d	90		 npad	 1
  0000e	90		 npad	 1
  0000f	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00013	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00016	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  00019	33 c8		 xor	 ecx, eax
  0001b	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00020	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$?0U?$pair@KK@std@@@?$_Tree_temp_node@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@PAU?$_Tree_node@U?$pair@$$CBKK@std@@PAX@1@$$QAU?$pair@KK@1@@Z ENDP ; std::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::_Tree_temp_node<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > ><std::pair<unsigned long,unsigned long> >
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ??$destroy_at@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z
_TEXT	SEGMENT
??$destroy_at@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z PROC ; std::destroy_at<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >, COMDAT
; __Location$ = ecx

; 330  : _CONSTEXPR20 void destroy_at(_Ty* const _Location) noexcept /* strengthened */ {

  00000	83 c1 04	 add	 ecx, 4
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring

; 1383 :         _Tidy_deallocate();

  00003	e9 00 00 00 00	 jmp	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
??$destroy_at@U?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@@std@@YAXQAU?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@0@@Z ENDP ; std::destroy_at<std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > > >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ?_Extract@?$_In_place_key_extract_map_impl@KU?$pair@KK@std@@@std@@SAABKABU?$pair@KK@2@@Z
_TEXT	SEGMENT
?_Extract@?$_In_place_key_extract_map_impl@KU?$pair@KK@std@@@std@@SAABKABU?$pair@KK@2@@Z PROC ; std::_In_place_key_extract_map_impl<unsigned long,std::pair<unsigned long,unsigned long> >::_Extract, COMDAT
; __Val$ = ecx

; 2175 :         return _Val.first;

  00000	8b c1		 mov	 eax, ecx

; 2176 :     }

  00002	c3		 ret	 0
?_Extract@?$_In_place_key_extract_map_impl@KU?$pair@KK@std@@@std@@SAABKABU?$pair@KK@2@@Z ENDP ; std::_In_place_key_extract_map_impl<unsigned long,std::pair<unsigned long,unsigned long> >::_Extract
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
;	COMDAT ??_G?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$dead$ = 8					; size = 4
??_G?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAXI@Z PROC ; std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor', COMDAT
; _this$ = ecx

; 1383 :         _Tidy_deallocate();

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  0000b	8b c6		 mov	 eax, esi
  0000d	5e		 pop	 esi
  0000e	c2 04 00	 ret	 4
??_G?$pair@KV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QAEPAXI@Z ENDP ; std::pair<unsigned long,std::basic_string<char,std::char_traits<char>,std::allocator<char> > >::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ??$construct@U?$pair@$$CBKK@std@@U?$pair@KK@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@QAU?$pair@$$CBKK@1@$$QAU?$pair@KK@1@@Z
_TEXT	SEGMENT
_<_Args_0>$ = 8						; size = 4
??$construct@U?$pair@$$CBKK@std@@U?$pair@KK@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@QAU?$pair@$$CBKK@1@$$QAU?$pair@KK@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::construct<std::pair<unsigned long const ,unsigned long>,std::pair<unsigned long,unsigned long> >, COMDAT
; ___formal$dead$ = ecx
; __Ptr$ = edx

; 728  :     static _CONSTEXPR20 void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00003	8b 4d 08	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00006	8b 01		 mov	 eax, DWORD PTR [ecx]
  00008	89 02		 mov	 DWORD PTR [edx], eax
  0000a	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0000d	89 42 04	 mov	 DWORD PTR [edx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory

; 734  :     }

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$construct@U?$pair@$$CBKK@std@@U?$pair@KK@2@@?$_Default_allocator_traits@V?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_Tree_node@U?$pair@$$CBKK@std@@PAX@std@@@1@QAU?$pair@$$CBKK@1@$$QAU?$pair@KK@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Tree_node<std::pair<unsigned long const ,unsigned long>,void *> > >::construct<std::pair<unsigned long const ,unsigned long>,std::pair<unsigned long,unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BM@@std@@YAII@Z
_TEXT	SEGMENT
??$_Get_size_of_n@$0BM@@std@@YAII@Z PROC		; std::_Get_size_of_n<28>, COMDAT
; __Count$dead$ = ecx

; 113  :     constexpr bool _Overflow_is_possible = _Ty_size > 1;
; 114  : 
; 115  :     if constexpr (_Overflow_is_possible) {
; 116  :         constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 117  :         if (_Count > _Max_possible) {
; 118  :             _Throw_bad_array_new_length(); // multiply overflow
; 119  :         }
; 120  :     }
; 121  : 
; 122  :     return _Count * _Ty_size;

  00000	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH

; 123  : }

  00005	c3		 ret	 0
??$_Get_size_of_n@$0BM@@std@@YAII@Z ENDP		; std::_Get_size_of_n<28>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility
;	COMDAT ??$construct_at@U?$pair@$$CBKK@std@@U?$pair@KK@2@@std@@YAPAU?$pair@$$CBKK@0@QAU10@$$QAU?$pair@KK@0@@Z
_TEXT	SEGMENT
??$construct_at@U?$pair@$$CBKK@std@@U?$pair@KK@2@@std@@YAPAU?$pair@$$CBKK@0@QAU10@$$QAU?$pair@KK@0@@Z PROC ; std::construct_at<std::pair<unsigned long const ,unsigned long>,std::pair<unsigned long,unsigned long> >, COMDAT
; __Location$ = ecx
; _<_Args_0>$ = edx
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00000	8b 02		 mov	 eax, DWORD PTR [edx]
  00002	89 01		 mov	 DWORD PTR [ecx], eax
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	89 41 04	 mov	 DWORD PTR [ecx+4], eax
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xutility

; 463  :     _MSVC_CONSTEXPR return ::new (static_cast<void*>(_Location)) _Ty(_STD forward<_Types>(_Args)...);

  0000a	8b c1		 mov	 eax, ecx

; 464  : }

  0000c	c3		 ret	 0
??$construct_at@U?$pair@$$CBKK@std@@U?$pair@KK@2@@std@@YAPAU?$pair@$$CBKK@0@QAU10@$$QAU?$pair@KK@0@@Z ENDP ; std::construct_at<std::pair<unsigned long const ,unsigned long>,std::pair<unsigned long,unsigned long> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\utility
;	COMDAT ??$?0KK$0A@@?$pair@$$CBKK@std@@QAE@$$QAU?$pair@KK@1@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??$?0KK$0A@@?$pair@$$CBKK@std@@QAE@$$QAU?$pair@KK@1@@Z PROC ; std::pair<unsigned long const ,unsigned long>::pair<unsigned long const ,unsigned long><unsigned long,unsigned long,0>, COMDAT
; _this$ = ecx

; 303  :         : first(_STD forward<_Other1>(_Right.first)), second(_STD forward<_Other2>(_Right.second)) {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00006	8b 02		 mov	 eax, DWORD PTR [edx]
  00008	89 01		 mov	 DWORD PTR [ecx], eax
  0000a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0000d	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  00010	8b c1		 mov	 eax, ecx
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
??$?0KK$0A@@?$pair@$$CBKK@std@@QAE@$$QAU?$pair@KK@1@@Z ENDP ; std::pair<unsigned long const ,unsigned long>::pair<unsigned long const ,unsigned long><unsigned long,unsigned long,0>
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z PROC ; std::_Pocma<std::allocator<char> >, COMDAT

; 1083 :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 1084 :         _Left = _STD move(_Right);
; 1085 :     }
; 1086 : }

  00000	c2 00 00	 ret	 0
??$_Pocma@V?$allocator@D@std@@@std@@YAXAAV?$allocator@D@0@0@Z ENDP ; std::_Pocma<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Ogtp
; File C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.44.35207\include\xstring
;	COMDAT ??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=, COMDAT
; _this$ = ecx

; 1225 :         noexcept(_Choose_pocma_v<_Alty> != _Pocma_values::_No_propagate_allocators) {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	57		 push	 edi

; 1226 :         if (this == _STD addressof(_Right)) {

  00005	8b 7d 08	 mov	 edi, DWORD PTR __Right$[ebp]
  00008	8b f1		 mov	 esi, ecx
  0000a	3b f7		 cmp	 esi, edi
  0000c	74 26		 je	 SHORT $LN34@operator

; 1227 :             return *this;
; 1228 :         }
; 1229 : 
; 1230 :         auto& _Al                 = _Getal();
; 1231 :         auto& _Right_al           = _Right._Getal();
; 1232 :         constexpr auto _Pocma_val = _Choose_pocma_v<_Alty>;
; 1233 :         if constexpr (_Pocma_val == _Pocma_values::_Propagate_allocators) {
; 1234 :             if (_Al != _Right_al) {
; 1235 :                 // intentionally slams into noexcept on OOM, TRANSITION, VSO-466800
; 1236 :                 _Mypair._Myval2._Orphan_all();
; 1237 :                 _Mypair._Myval2._Reload_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Al), _GET_PROXY_ALLOCATOR(_Alty, _Right_al));
; 1238 :             }
; 1239 :         } else if constexpr (_Pocma_val == _Pocma_values::_No_propagate_allocators) {
; 1240 :             if (_Al != _Right_al) {
; 1241 :                 assign(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 1242 :                 return *this;
; 1243 :             }
; 1244 :         }
; 1245 : 
; 1246 :         _Tidy_deallocate();

  0000e	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 1286 :                 _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  00013	0f 10 07	 movups	 xmm0, XMMWORD PTR [edi]
  00016	0f 11 06	 movups	 XMMWORD PTR [esi], xmm0
  00019	f3 0f 7e 47 10	 movq	 xmm0, QWORD PTR [edi+16]
  0001e	66 0f d6 46 10	 movq	 QWORD PTR [esi+16], xmm0

; 1247 :         _Pocma(_Al, _Right_al);
; 1248 :         _Take_contents(_Right);
; 1249 :         return *this;

  00023	c7 47 10 00 00
	00 00		 mov	 DWORD PTR [edi+16], 0
  0002a	c7 47 14 0f 00
	00 00		 mov	 DWORD PTR [edi+20], 15	; 0000000fH
  00031	c6 07 00	 mov	 BYTE PTR [edi], 0
$LN34@operator:

; 1250 :     }

  00034	5f		 pop	 edi
  00035	8b c6		 mov	 eax, esi
  00037	5e		 pop	 esi
  00038	5d		 pop	 ebp
  00039	c2 04 00	 ret	 4
??4?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::operator=
_TEXT	ENDS
END
